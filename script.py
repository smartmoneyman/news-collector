import os
import requests
import json
from bs4 import BeautifulSoup
import yfinance as yf
import nltk
from nltk.sentiment import SentimentIntensityAnalyzer

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Sentiment Analyzer
nltk.download('vader_lexicon')
sia = SentimentIntensityAnalyzer()

# –ü–æ–ª—É—á–∞–µ–º Webhook –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
DISCORD_WEBHOOK_URL = os.getenv("DISCORD_WEBHOOK_URL")
print(f"‚úÖ Webhook –∑–∞–≥—Ä—É–∂–µ–Ω: {bool(DISCORD_WEBHOOK_URL)}")

# üîπ –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TICKERS = ["AAPL", "TSLA", "MSFT"]  # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ –∞–∫—Ü–∏–∏
SENTIMENT_THRESHOLD = 0.3  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ–≥ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ (0.3 - —Å—Ä–µ–¥–Ω–∏–π, 0.5 - —Å–∏–ª—å–Ω—ã–π)

# üîπ –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π —Å Yahoo Finance API
def get_yahoo_news(ticker):
    url = f"https://query2.finance.yahoo.com/v1/finance/search?q={ticker}&newsCount=10"
    headers = {
        "User-Agent": "Mozilla/5.0",
        "Accept": "application/json",
    }

    response = requests.get(url, headers=headers)
    if response.status_code != 200:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {response.status_code} –¥–ª—è {ticker}")
        return []

    data = response.json()
    news_list = []

    if "news" in data:
        for article in data["news"]:
            title = article.get("title", "–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞")
            link = article.get("link", "")
            if title and link:
                news_list.append({"title": title, "link": link})

    print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(news_list)} –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è {ticker}")
    return news_list

# üîπ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
def analyze_sentiment(news_list):
    results = []
    for news in news_list:
        sentiment_score = sia.polarity_scores(news["title"])["compound"]
        
        # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –æ—Ü–µ–Ω–∫—É —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
        if sentiment_score > 0.3:
            sentiment_text = "üìà –ü–æ–∑–∏—Ç–∏–≤–Ω–∞—è"
        elif sentiment_score < -0.3:
            sentiment_text = "üìâ –ù–µ–≥–∞—Ç–∏–≤–Ω–∞—è"
        else:
            sentiment_text = "‚öñÔ∏è –ù–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è"

        news["sentiment_score"] = sentiment_score
        news["sentiment_text"] = sentiment_text
        results.append(news)

    return results

# üîπ –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Discord
def send_to_discord(news, ticker):
    if DISCORD_WEBHOOK_URL:
        message = (
            f"üì¢ **[{ticker}] –ù–æ–≤–æ—Å—Ç—å**\n"
            f"**{news['title']}**\n"
            f"üîó {news['link']}\n"
            f"üìä –¢–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: {news['sentiment_text']} ({news['sentiment_score']:.2f})"
        )
        payload = {"content": message}

        response = requests.post(DISCORD_WEBHOOK_URL, json=payload)
        if response.status_code == 204:
            print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Discord –¥–ª—è {ticker}!")
        else:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.status_code} –¥–ª—è {ticker}")
    else:
        print("‚ö†Ô∏è DISCORD_WEBHOOK_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")

# üîπ –õ–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
sent_news = set()

# üîπ –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
for ticker in TICKERS:
    news = get_yahoo_news(ticker)

    if not news:
        print(f"‚ö†Ô∏è –ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è {ticker}, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.")
        continue

    analyzed_news = analyze_sentiment(news)

    for news_item in analyzed_news:
        if abs(news_item["sentiment_score"]) >= SENTIMENT_THRESHOLD:
            unique_id = f"{ticker}-{news_item['title']}"
            if unique_id not in sent_news:
                send_to_discord(news_item, ticker)
                sent_news.add(unique_id)  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –Ω–æ–≤–æ—Å—Ç—å
